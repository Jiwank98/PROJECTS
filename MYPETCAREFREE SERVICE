파이썬
from twilio.rest import Client
import serial
import time


ard=serial.Serial(
    port="COM4",
    baudrate=9600
    )
time.sleep(3)
a=0
while(True):
    listen=ard.readline()
    decoded=listen.decode('utf-8')[:-2]
    if(a==0 and decoded=="warning"):
        a=a+1
        account_sid ='AC62dd05a500476ba2a8f9486895f96a2d'
        auth_token ='21e2f72d8c8f8f912055831b870c924f'
        client = Client(account_sid, auth_token)
        message = client.messages.create(
            body="마이펫케어프리서비스 알림: 경고 ! 마이펫의 배변통을 갈아주어야 합니다! 현재 마이펫 배변횟수(20회)",
            from_='+16318498654',
            to='+821025449812'
            )
        print(message.sid)
        time.sleep(3)
    elif(a==1 and decoded=="REDLIGHT"):
        a=a+1
        account_sid ='AC62dd05a500476ba2a8f9486895f96a2d'
        auth_token ='21e2f72d8c8f8f912055831b870c924f'
        client = Client(account_sid, auth_token)
        message = client.messages.create(
            body="마이펫케어프리서비스 알림: 위험 ! 마이펫의 배변통을 시급히 갈아주어야 합니다! 현재 마이펫 배변횟수(25회)",
            from_='+16318498654',
            to='+821025449812'
            )
        print(message.sid)
        time.sleep(3)
        
    elif(decoded=="RESET"):
        a=0
        time.sleep(3)





아두이노
#define MODE_1  1   //Ready mode
#define MODE_2  2   //Detect mode 1
#define MODE_3  3   //Detect mode 2
#define MODE_4  4   //Motor up mode
#define MODE_5  5   //Motor down mode
#define MODE_6  6   //Alarm system 



unsigned long timeVal=0;
int detect_count=0;
int detect_count3=0;
int Dir1Pin_A = 2;
int Dir2Pin_A = 3;
int SpeedPin_A = 10;
unsigned int  Mode = 1;
unsigned int  Alarm_Count = 0;
  unsigned int delay_tick = 0;
//unsigned int  motor_count = 0;
float distance;


void setup() {
  Serial.begin(9600);
  pinMode(7,OUTPUT);//Trigger
  pinMode(6,INPUT);//Echo
  pinMode(Dir1Pin_A, OUTPUT);
  pinMode(Dir2Pin_A, OUTPUT);
  pinMode(SpeedPin_A, OUTPUT);
  pinMode(13, INPUT_PULLUP);
  pinMode(12, INPUT_PULLUP);
  pinMode(8,OUTPUT);
  pinMode(9,INPUT);
}

void distance_detect(void)
{
  int interval;
  digitalWrite(6,LOW);
  digitalWrite(7,LOW);
  delayMicroseconds(2);
  
  digitalWrite(7,HIGH);
  delayMicroseconds(10);
  digitalWrite(7,LOW);
  
  interval=pulseIn(6,HIGH);
  distance = interval * 0.34 / 2 / 10;
//  distance=interval * 0.34 / 2 / 10;
}
void loop() {
  unsigned long millisTime=millis()/1000;
  float interval,cnt=0;
  String X=" ";
  if(digitalRead(9)==LOW){
    Alarm_Count=0;
    digitalWrite(8,LOW);
    Serial.println("RESET");
    }

  switch(Mode)
  {
    case MODE_1:
      if(digitalRead(12) == 0)
      {
        Motor_Down();
      }
      else
      {
        motor_stop();
        Mode = MODE_2;
        detect_count = 0;
        timeVal=millis();
      }
      break;
    case MODE_2:    //Detect mode
      if(millis()-timeVal>=1000)
      {
        timeVal=millis();
        distance_detect();
        if(distance<35 && distance>0)
        {
          detect_count++;
        }      
        if(detect_count<=10 && distance>=35)
        {
          detect_count=0;
        }
        if(detect_count>=10)
        {
          Mode = MODE_3;
          detect_count3 = 0;
        }
      }
      break;
  
    case MODE_3:
      if(millis()-timeVal>=1000)
      {
        timeVal=millis();
        distance_detect();
        if(distance>=35)
        {
          Mode = MODE_4;
          delay(3000);
          detect_count3++;
        }
        if(detect_count3<=3 && distance<35)
        {
          detect_count3=0;
        }
        if(detect_count3>3)
        {
          Mode = MODE_4;
          delay(3000);
          //motor_count = 0;
        }
      }
      break;
    case MODE_4:
        Motor_Up();
        if(digitalRead(13) == 1)
        {
          motor_stop();
          delay(5000);
          Mode = MODE_5;
          //motor_count = 0;
        }
        break;
    case MODE_5:
        Motor_Down();
        if(digitalRead(12) == 1)
        {
          motor_stop();
          Mode = MODE_1;
          Alarm_Count++;
          Mode=MODE_6;
        }
        break;
   case MODE_6:
        if(Alarm_Count==1){
          Serial.println("warning");
          Mode=MODE_1;
          }
   
        else if(Alarm_Count==3){
          Serial.println("REDLIGHT");
          digitalWrite(8,HIGH);
          Mode=MODE_1;
          }
        else{
        Mode=MODE_1;
        }
        break;
          
    default:
        Mode = MODE_1;
        break;
  }
  delay(100);
  delay_tick++;
}

void Motor_Up()
{
  digitalWrite(Dir1Pin_A, LOW);
  digitalWrite(Dir2Pin_A, HIGH);
  digitalWrite(10, HIGH);  
}

void Motor_Down()
{  
  digitalWrite(Dir1Pin_A, HIGH);
  digitalWrite(Dir2Pin_A, LOW);
  digitalWrite(10, HIGH);
}

void motor_stop(void)
{
  digitalWrite(Dir1Pin_A, LOW);
  digitalWrite(Dir2Pin_A, LOW);
  digitalWrite(10, LOW);
}
